/**
 * ============================================================================
 * PRINTIFY SDK
 * ============================================================================
 * 
 * Professional TypeScript SDK for Printify API
 * 
 * Features:
 * - Type-safe API client with Zod validation
 * - Automatic rate limiting (600 req/min global, 100 req/min catalog)
 * - Exponential backoff retries for transient errors
 * - Comprehensive error handling
 * - Full TypeScript support
 * 
 * @example
 * ```typescript
 * import { Printify } from '@muzo/printify';
 * 
 * const printify = new Printify({
 *   apiToken: process.env.PRINTIFY_API_TOKEN!,
 *   shopId: 123456,
 * });
 * 
 * // List all blueprints
 * const blueprints = await printify.catalog.getBlueprints();
 * 
 * // Upload an image
 * const image = await printify.uploads.upload({
 *   file_name: 'artwork.png',
 *   url: 'https://example.com/artwork.png',
 * });
 * 
 * // Create a product with mockups
 * const product = await printify.products.create({
 *   title: 'My Product',
 *   description: 'Product description',
 *   blueprint_id: 384,
 *   print_provider_id: 1,
 *   variants: [
 *     { id: 45740, price: 2000, is_enabled: true },
 *   ],
 *   print_areas: [
 *     {
 *       variant_ids: [45740],
 *       placeholders: [
 *         {
 *           position: 'front',
 *           images: [
 *             {
 *               id: image.id,
 *               x: 0.5,
 *               y: 0.5,
 *               scale: 1,
 *               angle: 0,
 *             },
 *           ],
 *         },
 *       ],
 *     },
 *   ],
 * });
 * 
 * console.log(product.images); // Mockup URLs generated by Printify
 * ```
 */

import { PrintifyClient } from "./client";
import { ShopsService } from "./services/shops";
import { CatalogService } from "./services/catalog";
import { UploadsService } from "./services/uploads";
import { ProductsService } from "./services/products";
import type { PrintifyClientConfig } from "./types";

export class Printify {
  private client: PrintifyClient;

  public shops: ShopsService;
  public catalog: CatalogService;
  public uploads: UploadsService;
  public products: ProductsService;

  constructor(config: PrintifyClientConfig) {
    this.client = new PrintifyClient(config);

    // Initialize services
    this.shops = new ShopsService(this.client);
    this.catalog = new CatalogService(this.client);
    this.uploads = new UploadsService(this.client);
    this.products = new ProductsService(this.client);
  }

  /**
   * Get current rate limit status
   */
  getRateLimitStatus() {
    return this.client.getRateLimitStatus();
  }

  /**
   * Get the underlying client (for advanced usage)
   */
  getClient() {
    return this.client;
  }
}

// Export everything
export * from "./client";
export * from "./types";
export * from "./services/shops";
export * from "./services/catalog";
export * from "./services/uploads";
export * from "./services/products";
